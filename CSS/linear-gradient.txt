syntax:
     >`linear-gradient(gradientDirection, color1, color2, ...);`

# gradientDirection is the direction of the line used for the transition. color1 and color2 are color arguments, 
# which are the colors that will be used in the transition itself. 
# These can be any type of color, including color keywords, hex, rgb, or hsl.
# While the linear-gradient function needs a minimum of two color arguments to work, it can accept many color arguments.

    ~ Color Stops ~
# Color-stops allow you to fine-tune where colors are placed along the gradient line. 
# They are a length unit like px or percentages that follow a color in the linear-gradient function.

# For example, in this red-black gradient, the transition from red to black takes place at the 90% point along the gradient line, so red takes up most of the available space:
    >`linear-gradient(90deg, red 90%, black);`


    ~ Box Shadow ~

box-shadow: offsetX offsetY color;
# both offsetX and offsetY accept number values in px and other CSS units
# a positive offsetX value moves the shadow right and a negative value moves it left
# a positive offsetY value moves the shadow down and a negative value moves it up
# if you want a value of zero (0) for any or both offsetX and offsetY, you don't need to add a unit. Every browser understands that zero means no change.



    `box-shadow: offsetX offsetY blurRadius color;`
# If a blurRadius value isn't included, it defaults to 0 and produces sharp edges. 
# The higher the value of blurRadius, the greater the blurring effect is.

    `box-shadow: offsetX offsetY blurRadius spreadRadius color;`
# Like blurRadius, spreadRadius defaults to 0 if it isn't included.



